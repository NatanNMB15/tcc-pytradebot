"""
Django settings for pytradebot project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'r3$=+$(7=btqauv35kdnv_at_3p_^1mlj=59gu0n42@26lo7#v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

if DEBUG:
    HOST = '172.28.1.2'

    ALLOWED_HOSTS = ['*']

    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'django.contrib.sites',
        'django.contrib.sitemaps',
        'robots',
        'mysite',
        'debug_toolbar',
        'parsley',
        'django_inlinecss',
    ]

    MIDDLEWARE = [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
        'csp.middleware.CSPMiddleware',
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    # Django Debug Toolbar
    INTERNAL_IPS = ['*']

    DEBUG_TOOLBAR_CONFIG = {
        "SHOW_TOOLBAR_CALLBACK" : lambda request: True,
    }

    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.versions.VersionsPanel',
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.settings.SettingsPanel',
        'debug_toolbar.panels.headers.HeadersPanel',
        'debug_toolbar.panels.request.RequestPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.staticfiles.StaticFilesPanel',
        'debug_toolbar.panels.templates.TemplatesPanel',
        'debug_toolbar.panels.cache.CachePanel',
        'debug_toolbar.panels.signals.SignalsPanel',
        'debug_toolbar.panels.logging.LoggingPanel',
        'debug_toolbar.panels.redirects.RedirectsPanel',
        'debug_toolbar.panels.profiling.ProfilingPanel'
    ]

    CSRF_USE_SESSIONS = True
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/2.2/howto/static-files/

    STATIC_URL = '/static/'
    MEDIA_URL = '/media/'

    STATIC_ROOT = '/var/www/pytradebot.com.br/static/'

else:
    HOST = 'pytradebot.com.br'

    ALLOWED_HOSTS = [
        'www.pytradebot.com.br',
        'pytradebot.com.br'
        ]

    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'django.contrib.sites',
        'django.contrib.sitemaps',
        'robots',
        'mysite',
        'parsley',
        'django_inlinecss',
    ]

    MIDDLEWARE = [
        'mysite.middleware.HealthCheckMiddleware',
        'csp.middleware.CSPMiddleware',
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
        'mysite.middleware.NoWWWRedirectMiddleware',
    ]

    # SSL and Security
    SECURE_SSL_REDIRECT = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_REDIRECT_EXEMPT = (r"healthz/$", r"readiness/$")
    SESSION_COOKIE_SECURE = True
    SESSION_COOKIE_SAMESITE = 'Strict'
    SESSION_EXPIRE_AT_BROWSER_CLOSE = True
    CSRF_USE_SESSIONS = True
    CSRF_COOKIE_SECURE = True
    CSRF_COOKIE_SAMESITE = 'Strict'
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    X_FRAME_OPTIONS = 'DENY'

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/2.2/howto/static-files/

    DEFAULT_FILE_STORAGE = 'config.storage_backends.GoogleCloudMediaStorage'
    STATICFILES_STORAGE = 'config.storage_backends.GoogleCloudStaticStorage'
    GS_PROJECT_ID = str(os.getenv('GS_PROJECT_ID'))
    GS_STATIC_BUCKET_NAME = str(os.getenv('GS_STATIC_BUCKET_NAME'))
    GS_MEDIA_BUCKET_NAME = str(os.getenv('GS_MEDIA_BUCKET_NAME'))
    STATIC_URL = 'https://storage.googleapis.com/{}/'.format(GS_STATIC_BUCKET_NAME)
    MEDIA_URL = 'https://storage.googleapis.com/{}/'.format(GS_MEDIA_BUCKET_NAME)

SITE_ID = 1
ROBOTS_CACHE_TIMEOUT = 60*60*24

ROOT_URLCONF = 'pytradebot.urls'

# Email

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = str(os.getenv('EMAIL_HOST'))
EMAIL_PORT = str(os.getenv('EMAIL_PORT'))
EMAIL_HOST_USER = str(os.getenv('EMAIL_HOST_USER'))
EMAIL_HOST_PASSWORD = str(os.getenv('EMAIL_HOST_PASSWORD'))
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_TIMEOUT = 30
DEFAULT_FROM_EMAIL = 'PyTradeBot <{}>'.format(EMAIL_HOST_USER)

# Templates and Static Dirs

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'painelcontrole'
LOGOUT_REDIRECT_URL = 'index'

STATICFILES_DIRS = [
    ('', os.path.join(BASE_DIR, 'mysite/templates/site-pytradebot/static/'))
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'mysite/templates')],
        'APP_DIRS': False,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'csp.context_processors.nonce',
            ],
            'loaders': [
                ('django.template.loaders.cached.Loader', [
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                ])
            ],
        },
    },
]

# CSP
CSP_DEFAULT_SRC = ("'none'")
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'",
                 '{}'.format(STATIC_URL),
                 'https://fonts.googleapis.com',
                 'https://s3.tradingview.com',
                 'https://s.tradingview.com')
CSP_SCRIPT_SRC = ("'self'",
                  '{}'.format(STATIC_URL),
                  'https://s3.tradingview.com',
                  'https://s.tradingview.com')
CSP_IMG_SRC = ("'self'",
               '{}'.format(STATIC_URL),
               'https://s3.tradingview.com',
               'https://s.tradingview.com')
CSP_FONT_SRC = ("'self'",
                '{}'.format(STATIC_URL),
                'https://fonts.gstatic.com')
CSP_CONNECT_SRC = ("'self'")
CSP_OBJECT_SRC = ("'none'")
CSP_BASE_URI = ("'none'")
CSP_FRAME_SRC = ("'self'",
                 '{}'.format(STATIC_URL),
                 'https://s3.tradingview.com',
                 'https://s.tradingview.com')
CSP_FRAME_ANCESTORS = ("'self'",
                       '{}'.format(STATIC_URL),
                       'https://s3.tradingview.com',
                       'https://s.tradingview.com')
CSP_FORM_ACTION = ("'self'")
CSP_MANIFEST_SRC = ("'self'",
                    '{}'.format(STATIC_URL))
CSP_INCLUDE_NONCE_IN = ['script-src']

# WSGI

WSGI_APPLICATION = 'pytradebot.wsgi.application'

# Cache

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': 'unix:/tmp/memcached.sock',
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django_db_geventpool.backends.postgresql_psycopg2',
        'NAME': str(os.getenv('DB_NAME')),
        'USER': str(os.getenv('DB_USER')),
        'PASSWORD': str(os.getenv('DB_PASSWORD')),
        'HOST': str(os.getenv('DB_HOST')),
        'PORT': int(os.getenv('DB_PORT')),
        'ATOMIC_REQUESTS': False,
        'CONN_MAX_AGE': 0,
        'OPTIONS': {
            'MAX_CONNS': 20
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'mysite.Usuario'
AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.AllowAllUsersModelBackend']

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True
